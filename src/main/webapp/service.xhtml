<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:c="http://java.sun.com/jsp/jstl/core"
      xml:lang="en" lang="en">
<h:head>
    <h:outputStylesheet name="common-style.css" library="css" />
    <title>Customers</title>
</h:head>
<h:body>
    <ui:composition template="/WEB-INF/templates/common/commonLayout.xhtml">
        <!--override the content-->
        <ui:define name="content">
            #{secondView.service.user.id}
            #{secondView.setUserID(secondView.service.user.id)}
            #{secondView.userID}

            #{secondView.findCustomer()}
            #{secondView.user.id}
        <!-- EDIT CUSTOMER -->
            <h:form id="edit_form">

                <p:growl id="growl" sticky="true" showDetail="true" />

                <p:wizard flowListener="#{secondView.onFlowProcess}">
                    <p:tab id="personal" title="Personal">
                        <p:panel header="Personal Details">
                            <p:messages />
                            <h:panelGrid columns="2" columnClasses="label, value">
                                <h:outputText value="Firstname: *" />
                                <p:inputText value="#{secondView.user.firstName}" required="true" label="Firstname"
                                             placeholder="Enter your name" />

                                <h:outputText value="Lastname: *" />
                                <p:inputText value="#{secondView.user.lastName}" required="true" label="Lastname"
                                             placeholder="Enter your surname" />

                                <h:outputText value="Username: *" />
                                <p:inputText value="#{secondView.user.username}" required="true" label="Username"
                                             placeholder="Enter your username" />

                                <h:outputText value="Age: " />
                                <p:calendar value="#{secondView.user.birthDate}" placeholder="dd-MM-yyyy"
                                            pattern="dd-MM-yyyy" mask="true" />

                                <h:outputText value="Skip to last: " />
                                <p:selectBooleanCheckbox value="#{secondView.skip}" />
                            </h:panelGrid>
                        </p:panel>
                    </p:tab>

                    <p:tab id="address" title="Address">
                        <p:panel header="Address Details">
                            <p:messages />
                            <h:panelGrid columns="2" columnClasses="label, value">
                                <h:outputText value="Country: " />
                                <p:inputText value="#{secondView.user.country}" placeholder="Enter the country name"/>

                                <h:outputText value="City: " />
                                <p:inputText value="#{secondView.user.city}" placeholder="Enter the city name"/>

                                <h:outputText value="Street: " />
                                <p:inputText value="#{secondView.user.street}" placeholder="Enter the street name"/>

                                <h:outputText value="Postal Code: " />
                                <p:inputText value="#{secondView.user.zipCode}" placeholder="Enter the zip code" />

                                <h:outputText value="Skip to last: " />
                                <p:selectBooleanCheckbox value="#{secondView.skip}" />
                            </h:panelGrid>
                        </p:panel>
                    </p:tab>

                    <p:tab id="contact" title="Contact">
                        <p:panel header="Contact Information">
                            <p:messages />
                            <h:panelGrid columns="2" columnClasses="label, value">
                                <h:outputText value="Email: *" />
                                <p:inputText id="email" value="#{secondView.user.email}" required="true" label="Email"
                                             placeholder="Enter your mail" size="40"
                                             requiredMessage="Please enter your email address."
                                             validatorMessage="Invalid email format">
                                    <f:validateRegex
                                            pattern="^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{2,})$" />
                                </p:inputText>

                                <h:outputText value="Phone: " />
                                <p:inputMask id="phone" value="#{secondView.user.phone}" placeholder="Enter your phone"
                                             mask="999-9999999"/>
                            </h:panelGrid>
                        </p:panel>
                    </p:tab>

                    <p:tab id="confirm" title="Confirmation">
                        <p:panel header="Confirmation">
                            <h:panelGrid id="confirmation" columns="3" columnClasses="alignTop,alignTop,alignTop" >
                                <p:panelGrid columns="2" columnClasses="label, value" >
                                    <h:outputText value="Firstname: " styleClass="recordLabel" />
                                    <h:outputText value="#{secondView.user.firstName}" styleClass="outputLabel"/>

                                    <h:outputText value="Lastname: " styleClass="recordLabel" />
                                    <h:outputText value="#{secondView.user.lastName}" styleClass="outputLabel"/>

                                    <h:outputText value="Username: " styleClass="recordLabel" />
                                    <h:outputText value="#{secondView.user.username}" styleClass="outputLabel"/>

                                    <h:outputText value="Age: " styleClass="recordLabel" />
                                    <h:outputText value="#{secondView.user.birthDate}" styleClass="outputLabel">
                                        <f:convertDateTime pattern="dd/MM/yyyy" />
                                    </h:outputText>
                                </p:panelGrid>

                                <p:panelGrid columns="2" columnClasses="label, value" >
                                    <h:outputText value="Country: " styleClass="recordLabel" />
                                    <h:outputText value="#{secondView.user.country}" styleClass="outputLabel"/>

                                    <h:outputText value="City: " styleClass="recordLabel" />
                                    <h:outputText value="#{secondView.user.city}" styleClass="outputLabel"/>

                                    <h:outputText value="Street: " styleClass="recordLabel" />
                                    <h:outputText value="#{secondView.user.street}" styleClass="outputLabel"/>

                                    <h:outputText value="Postal code: " styleClass="recordLabel" />
                                    <h:outputText value="#{secondView.user.zipCode}" styleClass="outputLabel"/>
                                </p:panelGrid>

                                <p:panelGrid columns="2" columnClasses="label, value" >
                                    <h:outputText value="Email: " styleClass="recordLabel" />
                                    <h:outputText value="#{secondView.user.email}" styleClass="outputLabel"/>

                                    <h:outputText value="Phone " styleClass="recordLabel" />
                                    <h:outputText value="#{secondView.user.phone}" styleClass="outputLabel"/>
                                </p:panelGrid>
                            </h:panelGrid>

                            <br/>
                            <h:form>
                                <h:outputLabel for="agree" value="Accept Terms " />
                                <p:selectBooleanCheckbox id="agree" value="#{secondView.user.acceptTerms}" requiredMessage="You must agree!">
                                    <f:validator validatorId="RequiredCheckboxValidator" />
                                </p:selectBooleanCheckbox>

                                <p:commandButton value="#{msg['submit_button']}" ajax="true" style="margin-left: 5%">
                                    <f:ajax execute="@form" render="@form" listener="#{secondView.submit}"/>
                                </p:commandButton>
                                <p:messages infoStyle="color: green;" errorStyle="color: red;" />
                            </h:form>
                        </p:panel>

                    </p:tab>
                </p:wizard>
                <br/><br/>
                <p:commandButton value="Home" icon="ui-icon-home" onclick="window.history.back();"/>
            </h:form>

        </ui:define>
    </ui:composition>

    <script type="text/javascript">
        /**
         * Faces Validator
         */
        PrimeFaces.validator['custom.emailValidator'] = {

            pattern: /\S+@\S+/,

            validate: function(element, value) {
                //use element.data() to access validation metadata, in this case there is none.
                if(!this.pattern.test(value)) {
                    throw {
                        summary: 'Validation Error',
                        detail: value + ' is not a valid email.'
                    }
                }
            }
        };

        /**
         * Bean validator
         */
        PrimeFaces.validator['Email'] = {

            pattern: /\S+@\S+/,

            MESSAGE_ID: 'org.primefaces.examples.validate.email.message',

            validate: function(element, value) {
                var vc = PrimeFaces.util.ValidationContext;

                if(!this.pattern.test(value)) {
                    var msgStr = element.data('p-email-msg'),
                        msg = msgStr ? {summary:msgStr, detail: msgStr} : vc.getMessage(this.MESSAGE_ID);

                    throw msg;
                }
            }
        };
    </script>
</h:body>
</html>